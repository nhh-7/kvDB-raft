syntax = "proto3";

// 定义了 客户端到 Raft 节点（kvServer）之间的通信格式，包括
// 请求的数据结构
//返回的数据结构
//哪些远程方法（RPC 方法）

package raftKVRpcProctoc; //所在的命名空间

option cc_generic_services = true;  //开启stub服务 表示你要用 protobuf 自带的 Service 类型

// 日志实体
message GetArgs{
  bytes Key = 1 ;
  bytes ClientId = 2 ;
  int32 RequestId = 3;
}


message GetReply  {
  bytes Err = 1; // 如果有错误（比如 key 不存在 / leader 不可用）填错信息
  bytes Value = 2; // 返回的值（如果找到了）
}


// Put or Append
message PutAppendArgs  {
  bytes Key = 1;
  bytes Value = 2 ;
  bytes Op = 3; // 表示是 Put 还是 Append 操作
  // "Put" or "Append"
  // You'll have to add definitions here.
  // Field names must start with capital letters,
  // otherwise RPC will break.
  bytes  ClientId = 4;
  int32  RequestId = 5;
}

// 仅返回是否成功
message PutAppendReply  {
  bytes Err = 1;
}


//只有raft节点之间才会涉及rpc通信
service kvServerRpc
{
  //PutAppend(args *PutAppendArgs, reply *PutAppendReply)
  //Get(args *GetArgs, reply *GetReply)

  rpc PutAppend(PutAppendArgs) returns(PutAppendReply);
  rpc Get (GetArgs) returns (GetReply);
}